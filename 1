#1
a, b = map(int, input().split())
n = min(a, b)
m = max(a, b)
print((n + m) * (m - n + 1) // 2)

#3
def check_string(s):
    stack = []
    opening_brackets = '({[<'
    closing_brackets = ')}]>'
    bracket_map = {')': '(', '}': '{', ']': '[', '>': '<'}

    for char in s:
        if char in opening_brackets:
            stack.append(char)
        elif char in closing_brackets:
            if not stack or stack.pop() != bracket_map[char]:
                return False

    return not stack

n = int(input())
out = ''

for i in range(n):
    inp = input()
    out += str(int(not check_string(inp)))

print(out)

Максимальная оценка – 100 баллов.

Дорогой друг Бильбо имел страсть к изучению криптографии. В один тихий осенний вечер, одолеваемый тоской, он задумался о создании личного кода, позволяющего сохранять в тайне свои заметки от своей кузины Лобелии Саквилль-Бэггинс. Бильбо изобрел код, который может быть использован для шифрования одного и того же сообщения несколькими различными методами.

Даже не догадываясь, он придумал шифр Цезаря – шифр, в котором буква заменяется другой, отстоящей от нее на определенное количество символов - ключ. (Например, если ключ равен 1, то буква «a» заменяется на «b», а буква «z» заменяется на «a», при этом маленькие буквы заменяются маленькими, а большие большими).

Входные данные. В первой строке дана буква латинского алфавита, с которой начинается исходное сообщение. Во второй строке дано зашифрованное сообщение длиной не более 255 символов. Сообщение состоит из больших и маленьких букв латинского алфавита, а также цифр, пробелов, знаков препинания и знаков '@', '#'. Шифровке подвергаются только буквы. Цифры, пробелы и знаки остаются теми же самыми и на тех же местах, что и в исходном тексте.

Выходные данные. Вывести расшифрованное сообщение, которое может состоять из больших и маленьких букв латинского алфавита, цифр, пробелов и указанных знаков.

